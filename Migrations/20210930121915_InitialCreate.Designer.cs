// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Valsa.Data;

namespace Valsa.Migrations
{
    [DbContext(typeof(CreateAccountContext))]
    [Migration("20210930121915_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Valsa.Models.Account", b =>
                {
                    b.Property<string>("account_number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("account_pin")
                        .HasColumnType("int");

                    b.Property<decimal>("balance")
                        .HasColumnType("money");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.HasKey("account_number");

                    b.HasIndex("account_number")
                        .IsUnique();

                    b.HasIndex("customer_id");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("Valsa.Models.CustomerDetail", b =>
                {
                    b.Property<int>("customer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("last_name")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("mobile_number")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("pan_no")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("starting_balance")
                        .HasColumnType("money");

                    b.HasKey("customer_id");

                    b.HasIndex("email")
                        .IsUnique();

                    b.HasIndex("mobile_number")
                        .IsUnique();

                    b.HasIndex("pan_no")
                        .IsUnique();

                    b.ToTable("customerDetails");
                });

            modelBuilder.Entity("Valsa.Models.CustomerLogin", b =>
                {
                    b.Property<int>("customer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("customer_id");

                    b.ToTable("CustomerLogins");
                });

            modelBuilder.Entity("Valsa.Models.EmployeeLogin", b =>
                {
                    b.Property<int>("employee_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("employee_id");

                    b.ToTable("EmployeeLogins");
                });

            modelBuilder.Entity("Valsa.Models.Loan", b =>
                {
                    b.Property<int>("loan_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmpType")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("account_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("amount")
                        .HasColumnType("money");

                    b.Property<DateTime>("date_time")
                        .HasColumnType("date");

                    b.Property<decimal>("income")
                        .HasColumnType("money");

                    b.Property<string>("mobile_number")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("orgName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("purpose")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("loan_id");

                    b.HasIndex("account_number");

                    b.ToTable("loans");
                });

            modelBuilder.Entity("Valsa.Models.Transaction", b =>
                {
                    b.Property<int>("reference_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("account_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("account_pin")
                        .HasColumnType("int");

                    b.Property<decimal>("amount")
                        .HasColumnType("money");

                    b.Property<string>("counterparty")
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime>("date_time")
                        .HasColumnType("date");

                    b.Property<string>("transaction_type")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("updated_balance")
                        .HasColumnType("money");

                    b.HasKey("reference_id");

                    b.HasIndex("account_number");

                    b.ToTable("transactions");
                });

            modelBuilder.Entity("Valsa.Models.Account", b =>
                {
                    b.HasOne("Valsa.Models.CustomerDetail", "CustomerDetail")
                        .WithMany()
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerDetail");
                });

            modelBuilder.Entity("Valsa.Models.Loan", b =>
                {
                    b.HasOne("Valsa.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("account_number")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Valsa.Models.Transaction", b =>
                {
                    b.HasOne("Valsa.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("account_number")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
